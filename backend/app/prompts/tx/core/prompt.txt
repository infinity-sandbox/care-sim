I am building a day care center ai simulator page where a client (the day care center) can fill out the steps
(forms) to get insight from llm day-care about their finances, how many people they can hire, and other insights.
i am using react with typescript and antd for design.

- the front end has accent color of blue and background color of white. (I wanat only frontend code no backend code)
- what i want you to do is to create a react page that has a form with multiple steps
that will collect information from the user and then send it to the backend to get insight from llm by providing dummy endpoint.
- so the final result is a dashboard from the llm that can show as Insights
- also i want to use axios as the http client to send and recive data so put a sample axios call to the backend to get the insights.
- I want the full code (don't say you can finish it at random place), I want the full functionality.
- also make the page scrollable
- It should be responsive and work well on both desktop and mobile devices.
- so when building the frontend you should know and use what kinds of data i am expecting from the backend and what kind of data i will send to the backend. (basicly the data must be a structured in json response).
- all files content you gave me must be in there respective folder and file names (css files in styles/ folder, components in components/ folder, etc.). make it all structured and organized.
- on all pages there should be a button with the first letter name of the loged user at the top right corner and when clicked logout button should appeare (put axios endpoint to give you this). (basicly i will give you one letter like this) {"email": "a"} so you can show as "a" as a login user

This is my already started folder structure that i have built and i am buildinig this from this standpoint:
components/
- App.tsx
- Login.tsx (after the login it should land on the welcome page)
- Chatbot.tsx
- PrivateRoute.tsx
and many more

styles/
Login.css
Chatbot.css
and many more


the form should have the following fields:

this should be included:
- the front end has accent color of blue and background color of white.
- a welcome message that describes the application (at the start of the page) then it will land
on the form page with steps 
- the form should have multiple steps to collect information from the user
- the form should have a save button and a next button (when i hit back it will show the saved data: you can save this in the frontend side)
- the form should have a hidden side bar with logout option (at the right top cornor which has the first letter of the email loged in(you can put endpoint to give you this))
- make it proffesional and usable in real world our there for deployment
- make it elegant and beautiful with nice fonts and orders
- will have buttons to add more if the client has more info to put
- and it must have info pop out on each section to descript what they can fill there
- and finally it should have insight button after step 1 is finished and insight will load and wait for llm response
- also add help indicators so that when clients hover it should show full information about the form input
- make the UI extremly beautiful


This is the FULL content of the pages that i want to build:
- the page should have a header that has the title "Center Operations Simulator"
- it should have a sub header that has the title "Simulate cash flow, budgeting, staffing, and financial events"
- it should have a banner that has the title "Simulator Banner"
- it should have a Stepper or progress bar that has 3 steps or pages:

the a Stepper or progress bar has 3 steps or pages ...
1. Inputs (operational and financial data entry)
2. Insights (result after simulation)
3. Next Steps (personalized checklist after review)

you can have its own slider for inputs other to the main slider (nisted slider) but the data should be saved on frontend memory and then only when generate insight button is clicked it will send all data as a json
on each input slider page partion based on what you want is needed to partion and at the bottom the only button should be back and next but when the final slider is reached for the input the next button is converted to genereate insight

Input page: it has the following sections:

- Business Information (main header)
    Business Name (Optional), data type text
    placeholder you can use is "eg. Demo Daycare Center"

- Revenue Sources (main header)
    Source name, data type text
    monthly amount, data type number (specify it is in dollar) 
    Tag/Note, data type text
    and "remove" button at the right most (so the above 3 fields are repeated for each source and there is a button to add more sources)

- Expense (main header)

- Employees (sub header)
    Expense Name, data type text
    Monthly Amount, data type number (specify it is in dollar)
    hours/month, data type number
    Type, data type drop down box that has selection "monthly" or "hourly" or "daily" or "yearly" (default is monthly)
    and "remove" button at the right most (so the above 4 fields are repeated for each expense name, and there is a button to add more expenses)
    example expense names are director, teacher, assistant teacher (you can use them as placeholders for the first 3 expense names then the "add more" button will add more expense names)
- Facilities (sub header)
    Expense Name, data type text
    Monthly Amount, data type number (specify it is in dollar)
    Type, data type drop down box that has selection "monthly" or "hourly" or "daily" or "yearly" (default is monthly)
    and "remove" button at the right most (so the above 3 fields are repeated for each expense name, and there is a button to add more expenses)
    example expense names are rent, utilities, insurance, taxes (you can use them as placeholders for the first 4 expense names then the "add more" button will add more expense names)
- Administrative (sub header)
    Expense Name, data type text
    Monthly Amount, data type number (specify it is in dollar)
    Type, data type drop down box that has selection "monthly" or "hourly" or "daily" or "yearly" (default is monthly)
    and "remove" button at the right most (so the above 3 fields are repeated for each expense name, and there is a button to add more expenses)
    example expense names are Software, Supplies, Marketing, Miscellaneous (you can use them as placeholders for the first 4 expense names then the "add more" button will add more expense names)
- Supplies (sub header)
    Expense Name, data type text
    Monthly Amount, data type number (specify it is in dollar)
    Type, data type drop down box that has selection "monthly" or "hourly" or "daily" or "yearly" (default is monthly)
    and "remove" button at the right most (so the above 3 fields are repeated for each expense name, and there is a button to add more expenses)
    example expense names are Food, Diapers/Wipes, Cleaning Supplies, Other (you can use them as placeholders for the first 4 expense names then the "add more" button will add more expense names)

- Classroom & Operational Details (main header)

- Classrooms (sub header)
    classroom name, data type text
    Capacity, data type number (specify it is in student count)
    teacher student ratio (data type number, specify it is in ratio)
    average monthly student (data type number, specify it is in student count)
    and "remove" button at the right most (so the above 4 fields are repeated for each classroom and there is a button to add more classrooms)
    example classroom types are Toddler, Preschool, Pre-Kindergarten (you can use them as placeholders for the first 3 classroom types then the "add more" button will add more classroom types)

- Operating Details (sub header)
    Operating Hours (daily), data type number (specify it is in hours)
    Operating Days (per year), data type number (specify it is in days)
    and "remove" button at the right most (so the above 2 fields are repeated for each classroom and there is a button to add more classrooms)

- Business Goals (main header)
    Goal, data type text
    grow revenue by x%, or increase profit by y% data type number (specify it is in percentage)
    example goals are Increase Enrollment, Reduce Expenses, Improve Staff Retention (you can use them as placeholders for the first 3 goals then the "add more" button will add more goals)

- Upload a file, if you want to give the AI more data to make better decisions (accept only pdf) (main header)
- File Upload Section
    there should be a file upload button (you can use antd's Upload component for this) - if its successfully uploaded it should show a success message, if not show error in that section
    there should be endpoint to send the uploaded file to the backend for processing
    should have a button to remove the uploaded file

* then at the end of the page it should have 3 buttons

- Save My Inputs (to save the inputs in the backend side) - there should be endpoint in axios to save all the inputs as json and send it to the backend 
    handle if empty fields are saved send it as empty string or null for text, and zero for numbers
- Generate insight (to generate insight from the llm) - there should be endpoint in axios to generate insight from the llm


PART 2: Insights page (after the Generate insight button is clicked)     

// This page will show the insights from the llm after the Generate insight button is clicked
- it should have a header "Insights"
- Simulation Results & Key Performance Indicators (header)
this should be the output from the llm after the Generate insight button is clicked

{
  "net_monthly_income": {
    "value": 3500,
    "currency": "USD",
    "calculation": "total_monthly_revenue - total_monthly_expenses",
    "note": "Positive net income â€” your center is profitable this month."
  },
  "break_even_enrollment": {
    "value": 45,
    "unit": "students",
    "calculation": "total_fixed_costs / average_revenue_per_student",
    "note": "You need 45 enrolled students to cover all expenses."
  },
  "largest_expense": {
    "category": "Salaries",
    "percentage_of_total_expenses": 62.5,
    "calculation": "(largest_category_expense / total_expenses) * 100"
  },
  "capacity_utilization": {
    "value": 78.3,
    "unit": "percent",
    "calculation": "(total_enrolled_students / total_capacity) * 100",
    "note": "You are at 78% of total classroom capacity."
  },
  "executive_summary": {
    "financial_overview": "Your center generates $15,000 monthly revenue with $11,500 in expenses, resulting in $3,500 net income.",
    "profitability_status": "Profitable â€” consider investing in marketing to reach full capacity.",
    "enrollment_status": "78% capacity used â€” room for growth.",
    "recommendations": [
      "Increase enrollment by 10% to reach optimal utilization.",
      "Negotiate supplier costs to reduce expenses."
    ]
  }
}

then i want to show this as a dashboard with cards that show the above data in a nice way

the below lists should be shown as cards in the dashboard beautifully

Net Monthly Income
Break-Even Enrollment
Large expense 
capacity utilization

and executive summary should be shown as a text area with the above data in a nice way


at the end of the page it should have 2 buttons
- download pdf Report
- send the report to my email
- next step

then there should be next button for personalized checklist that will take the user to the next page

PART 3: Next Steps page (personalized checklist after review)

- Personalized action plan (main header)
 Based an your simulation results, here are targeted recommendations to improve your center's performance
 then add chekclist items with the recommendation data from the llm
 so there should be endpoint to fetch this data so you should provide that in axios , this is the datatype

 {"recommendations": [
      "Increase enrollment by 10% to reach optimal utilization.", (checklist 1)
      "Negotiate supplier costs to reduce expenses.", (checklist 2)
      "Consider hiring an additional teacher to reduce student-teacher ratio.", (checklist 3)
    ]}

- Your Progress (main header)

    Progress bar that shows the progress of the simulation (should increase when each lists are checked) (all lists checked means 100% progress bar filled) (you can use antd's Progress component for this)
    when it reaches 100% say this with green check (as seen in success message) here is the text:
    "Excellent Performance! (main header) - Your center simulation shows strong financial health with no immediate action items. Keep monitoring your metrics and consider growth opportunities."




this is App.tsx content


import React, { useState } from 'react';
import { Routes, Route, BrowserRouter } from 'react-router-dom';
import Login from './components/Login';
import ForgotPassword from './components/forgetLink/forgetLinkPage';
import PasswordResetPage from './components/forgetLink/emailRedirectedPage';
import SuccessRegistrationPage from './components/statusPages/successRegistrationPage';
import PrivateRoute from './components/PrivateRoute';
import Register from './components/RegisterForm';
import Chatbot from './components/Chatbot';

import './App.css';

function App() {
  // const [message, setMessage] = useState<string | null>(null);

  return (
    <BrowserRouter>
      <Routes>
        <Route path="/" element={<Login />} />
        <Route path="/login" element={<Login />} />
        <Route path='/forgot/password' element={<ForgotPassword />} />
        <Route path='/reset/password' element={<PasswordResetPage />} />
        <Route path='/success/registration' element={<SuccessRegistrationPage />} />
        <Route path='/register' element={<Register />} />
        
          <Route path="/chatbot" element={
            <PrivateRoute>
              <Chatbot />
            </PrivateRoute>
          } />
          
      </Routes>
    </BrowserRouter>
  );
}

export default App;



now please give me a beautiful and elegant react page that has the above features and functionality